---
- name: 3. Configure Control Plane
  hosts: control_plane
  become: true
  tasks:
    - name: Reset Kubernetes cluster
      ansible.builtin.command: kubeadm reset -f
      when: inventory_hostname == groups['control_plane'][0]

    - name: Initialize the cluster on the first control plane node
      ansible.builtin.command: >
        kubeadm init --pod-network-cidr={{ pod_network_cidr }}
        --apiserver-advertise-address={{ apiserver_endpoint }}
      when: inventory_hostname == groups['control_plane'][0]
      register: kubeadm_init

    - name: Create .kube directory for root user
      ansible.builtin.file:
        path: /root/.kube
        state: directory
        mode: '0755'
      when: inventory_hostname == groups['control_plane'][0]

    - name: Copy admin.conf to user's kube config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: true
        owner: root
        group: root
        mode: '0644'
      when: inventory_hostname == groups['control_plane'][0]

    - name: Fetch kubeconfig from control plane
      ansible.builtin.fetch:
        src: /root/.kube/config
        dest: admin.conf
        flat: yes
      when: inventory_hostname == groups['control_plane'][0]

    # Wait for API server to be ready
    - name: Wait for Kubernetes API server to be ready
      ansible.builtin.shell:
        cmd: "kubectl get --raw='/healthz'"
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: api_server_check
      until: api_server_check.stdout == 'ok'
      retries: 30
      delay: 10
      when: inventory_hostname == groups['control_plane'][0]
      changed_when: false

    - name: Install Calico CNI
      ansible.builtin.command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/calico.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: inventory_hostname == groups['control_plane'][0]
      register: calico_install
      until: calico_install.rc == 0
      retries: 3
      delay: 10

    - name: Wait for Calico pods to be ready
      ansible.builtin.shell: |
        kubectl get pods -n kube-system -l k8s-app=calico-node --no-headers | grep -v Running | wc -l
      register: calico_pods_not_ready
      until: calico_pods_not_ready.stdout == "0"
      retries: 30
      delay: 10
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: inventory_hostname == groups['control_plane'][0]

    - name: Generate worker join command
      ansible.builtin.shell: |
        kubeadm token create --print-join-command
      register: worker_join_command_result
      when: inventory_hostname == groups['control_plane'][0]
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      retries: 3
      delay: 5
      until: worker_join_command_result.rc == 0

    - name: Set join command facts
      ansible.builtin.set_fact:
        worker_join_command: "{{ worker_join_command_result.stdout }}"
      when: inventory_hostname == groups['control_plane'][0]

    - name: Fetch admin.conf to local machine
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ inventory_dir }}/admin.conf"
        flat: yes
      when: inventory_hostname == groups['control_plane'][0]

    - name: Rename cluster in kubeconfig
      ansible.builtin.command: >
        kubectl config rename-context
        kubernetes-admin@kubernetes k8s-dev-cluster@proxmox
        --kubeconfig="{{ inventory_dir }}/admin.conf"
      delegate_to: localhost
      become: false
      when: inventory_hostname == groups['control_plane'][0]

    - name: Rename user in kubeconfig
      ansible.builtin.command: >
        sed -i'' -e 's/name: kubernetes-admin/name: k8s-dev-cluster@proxmox/' -e 's/user: kubernetes-admin/user: k8s-dev-cluster@proxmox/' "{{ inventory_dir }}/admin.conf"
      delegate_to: localhost
      become: false
      when: inventory_hostname == groups['control_plane'][0]

    - name: Set current context in kubeconfig
      ansible.builtin.command: >
        kubectl config use-context
        k8s-dev-cluster@proxmox
        --kubeconfig="{{ inventory_dir }}/admin.conf"
      delegate_to: localhost
      become: false
      when: inventory_hostname == groups['control_plane'][0]
